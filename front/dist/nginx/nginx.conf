user nginx;
worker_processes  1;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;
    sendfile        on;  

    keepalive_timeout  65;

    
    server {
        server_name  mamoot.be www.mamoot.be 146.59.150.137;

        gzip on;
        gzip_vary on;
        gzip_min_length 500;
        gzip_proxied expired no-cache no-store private auth;
        gzip_types text/plain application/javascript application/x-javascript text/javascript text/xml text/css;
        gzip_disable "MSIE [1-6]\.";
		
		root   /usr/share/nginx/html;
		
        server_tokens off;

        location ~ /index.html|.*\.json$ {
          expires -1;        
          add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';     
        }

        location ~ .*\.css$|.*\.js$|.*\.jpg$|.*\.png$|.*\.woff$|.*\.webp$ {               
          add_header Cache-Control 'max-age=31449600'; # one year        
          include /etc/nginx/security-headers.conf;        
        }

        location / {
		  try_files $uri$args $uri$args/ /index.html;
          
          add_header Cache-Control 'max-age=86400'; # one day
          include /etc/nginx/security-headers.conf;       
		}

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html;
        }

    
    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/mamoot.be/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/mamoot.be/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot











}


    
    server {
    if ($host = www.mamoot.be) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    if ($host = mamoot.be) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


        listen       80;
        server_name  mamoot.be www.mamoot.be 146.59.150.137;
    return 404; # managed by Certbot




}}